<entry>
    <name>CUDA Context Thread Management</name>
    <description><![CDATA[Simple program illustrating how to the CUDA Context Management API and uses the new CUDA 4.0parameter passing and CUDA launch API.  CUDA contexts can be created separately and attached independently to different threads.]]></description>
    <whitepaper></whitepaper>
    <minspec>SM 1.0</minspec>
    <keywords>CUDA, GPGPU, threads</keywords>
    <scope>1:CUDA Basic Topics</scope>
    <files>
      <file>data\threadMigration_kernel32.ptx</file>
      <file>data\threadMigration_kernel64.ptx</file>
    </files>
    <cudaapi>cuCtxCreate</cudaapi>
    <cudaapi>cuCtxDestroy</cudaapi>
    <cudaapi>cuModuleLoad</cudaapi>
    <cudaapi>cuModuleLoadDataEx</cudaapi>
    <cudaapi>cuModuleGetFunction</cudaapi>
    <cudaapi>cuLaunchKernel</cudaapi>
    <cudaapi>cuMemcpyDtoH</cudaapi>
    <cudaapi>cuCtxPushCurrent</cudaapi>
    <cudaapi>cuCtxPopCurrent</cudaapi>
    
    <keyconcepts level="advanced">CUDA Driver API</keyconcepts>

    <!-- *** Additional project definition information *** -->
    <!-- Libraries that the project should be linked against. Document may contain any number of "libraries" elements. -->
    <!-- Attributes "os" and "arch" are optional and may be used in any combination. -->
    <!-- "framework" attribute will be ignored on platforms other then Mac OS X -->

    <!-- Either absolute or relative to sample -->
    <library-path os="windows"></library-path>

    <!-- Either absolute or relative to sample -->
    <include-path>./</include-path>
    <include-path>../</include-path>
    <include-path>../../common/inc</include-path>
    
    <!-- Can be either "separate" or "whole", omitting this element means that sample can be compiled either way -->
    <devicecompilation>whole</devicecompilation>

    <!-- These options will be passed to NVCC compiler as is and for all files -->
    
    <nvcc-compiler file="threadMigration_kernel.cu"></nvcc-compiler>
    <sm-arch>sm10</sm-arch>
    <sm-arch>sm20</sm-arch>
    <sm-arch>sm30</sm-arch>
    <sm-arch>sm50</sm-arch>
    <sm-arch>sm32</sm-arch>
    <sm-arch>sm35</sm-arch>
    

    <!-- One of "exe|dll|lib" (exe is default) -->
    <type>exe</type>

    <!-- By default IDE will open file "samplename.(cu|cpp) -->
    <primary-file>threadMigration.cpp</primary-file>

    <!-- Collection of [OS][:arch] tokens -->
    <supported-env>linux:x86_64, linux:i686, windows7, macosx:x86_64, macosx:i686, :arm</supported-env>

    <!-- Driver API projects are not supported by the Nsight EE -->
    <no-nsight-eclipse/>
    <recipe>
        <name>threadMigration</name>
        <ptx>threadMigration_kernel</ptx>
        <libraries>
            <library>cuda</library>
        </libraries>
        <supportedbuilds>
            <build>makefile</build>
        </supportedbuilds>
    </recipe>
</entry>
