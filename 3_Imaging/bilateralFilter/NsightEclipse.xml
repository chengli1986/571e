<entry>
    <name>Bilateral Filter</name>
    <description><![CDATA[Bilateral filter is an edge-preserving non-linear smoothing filter that is implemented with CUDA with OpenGL rendering. It can be used in image recovery and denoising. Each pixel is weight by considering both the spatial distance and color distance between its neighbors. Reference:"C. Tomasi, R. Manduchi, Bilateral Filtering for Gray and Color Images, proceeding of the ICCV, 1998, http://users.soe.ucsc.edu/~manduchi/Papers/ICCV98.pdf"]]></description>
    <whitepaper></whitepaper>
    <minspec>SM 1.0</minspec>
    <keywords>GPGPU,CUDA,Image Processing,box filter,opengl</keywords>
    <scope>2:Graphics Interop,2:Image Processing,2:Computer Vision</scope>
    <files>
        <file>data\nature_monte.bmp</file>
        <file>data\ref_05.ppm</file>
        <file>data\ref_06.ppm</file>
        <file>data\ref_07.ppm</file>
        <file>data\ref_08.ppm</file>
    </files>
	<qatests>
        <qatest>-radius=5 -file=ref_05.ppm</qatest>
        <qatest>-radius=6 -file=ref_06.ppm</qatest>
        <qatest>-radius=7 -file=ref_07.ppm</qatest>
        <qatest>-radius=7 -file=ref_08.ppm</qatest>
    </qatests>
    <cudaapi>cudaGLSetGLDevice</cudaapi>
    <cudaapi>cudaGraphicsMapResources</cudaapi>
    <cudaapi>cudaGraphicsUnmapResources</cudaapi>
    <cudaapi>cudaGraphicsResourceGetMappedPointer</cudaapi>
    <cudaapi>cudaGraphicsRegisterResource</cudaapi>
    <cudaapi>cudaGraphicsGLRegisterBuffer</cudaapi>
    <cudaapi>cudaGraphicsUnregisterResource</cudaapi>
    
    <keyconcepts level="basic">Graphics Interop</keyconcepts>
    <keyconcepts level="basic">Image Processing</keyconcepts>

    <!-- *** Additional project definition information *** -->
    <!-- Libraries that the project should be linked against. Document may contain any number of "libraries" elements. -->
    <!-- Attributes "os" and "arch" are optional and may be used in any combination. -->
    <!-- "framework" attribute will be ignored on platforms other then Mac OS X -->
    <library>GLU</library>
    <library>GL</library>
    <library os="macosx" framework="true">GLUT</library>
    <library os="linux">X11</library>
    <library os="linux">GLEW</library>
    <library os="linux">glut</library>

    <!-- Either absolute or relative to sample -->
    <library-path os="windows" arch="x86_64">../../common/lib/x64</library-path>
    <library-path os="windows" arch="Win32">../../common/lib/Win32</library-path>
    <library-path os="linux" arch="x86_64">../../common/lib/linux/x86_64</library-path>
    <library-path os="linux" arch="i686">../../common/lib/linux/i686</library-path>
    <library-path os="macosx">../../common/lib/darwin</library-path>

    <!-- Either absolute or relative to sample -->
    <include-path>./</include-path>
    <include-path>../</include-path>
    <include-path>../../common/inc</include-path>
    
    <!-- Can be either "separate" or "whole", omitting this element means that sample can be compiled either way -->
    <devicecompilation>whole</devicecompilation>

    <!-- These options will be passed to NVCC compiler as is and for all files -->
    
    <nvcc-compiler file="bilateral_kernel.cu"></nvcc-compiler>
    <sm-arch>sm10</sm-arch>
    <sm-arch>sm20</sm-arch>
    <sm-arch>sm30</sm-arch>
    <sm-arch>sm50</sm-arch>
    <sm-arch>sm32</sm-arch>
    <sm-arch>sm35</sm-arch>
    

    <!-- One of "exe|dll|lib" (exe is default) -->
    <type>exe</type>

    <!-- By default IDE will open file "samplename.(cu|cpp) -->
    <primary-file>bilateralFilter.cpp</primary-file>

    <!-- Collection of [OS][:arch] tokens -->
    <supported-env>linux:x86_64, linux:i686, windows7, macosx:x86_64, macosx:i686, :arm</supported-env>
    <recipe>
        <name>bilateralFilter</name>
        <gencode>
            <sm>10</sm>
            <sm>20</sm>
            <sm>30</sm>
            <sm>32</sm>
            <sm>35</sm>
            
            <sm>50</sm>
        </gencode>
        <keywords>
            <keyword>openGL</keyword>
        </keywords>
        <supportedbuilds>
            <build>makefile</build>
        </supportedbuilds>
    </recipe>
</entry>
