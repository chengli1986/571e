<entry>
    <name>batchCUBLAS</name>
    <description><![CDATA[A CUDA Sample that demonstrates how using batched CUBLAS API calls to improve overall performance.]]></description>
    <whitepaper></whitepaper>
    <minspec>SM 1.0</minspec>
    <keywords>CUBLAS,Linear Algebra</keywords>
    <scope>1:CUDA Basic Topics,3:Linear Algebra</scope>
    <files>
    </files>
    
    <keyconcepts level="basic">Linear Algebra</keyconcepts>
    <keyconcepts level="basic">CUBLAS Library</keyconcepts>

    <!-- *** Additional project definition information *** -->
    <!-- Libraries that the project should be linked against. Document may contain any number of "libraries" elements. -->
    <!-- Attributes "os" and "arch" are optional and may be used in any combination. -->
    <!-- "framework" attribute will be ignored on platforms other then Mac OS X -->
    <library>cublas</library>
	
    <!-- Either absolute or relative to sample -->
    <library-path os="windows"></library-path>

    <!-- Either absolute or relative to sample -->
    <include-path>./</include-path>
    <include-path>../</include-path>
    <include-path>../../common/inc</include-path>
    
    <!-- Can be either "separate" or "whole", omitting this element means that sample can be compiled either way -->
    <devicecompilation>whole</devicecompilation>

    <!-- These options will be passed to NVCC compiler as is and for all files -->
    

    <!-- One of "exe|dll|lib" (exe is default) -->
    <type>exe</type>

    <!-- By default IDE will open file "samplename.(cu|cpp) -->
    <primary-file>batchCUBLAS.cpp</primary-file>

    <!-- Collection of [OS][:arch] tokens -->
    <supported-env>linux:x86_64, linux:i686, windows7, macosx:x86_64, macosx:i686, :arm</supported-env>
    <recipe>
        <name>batchCUBLAS</name>
        <libraries>
            <library>cublas</library>
        </libraries>
        <supportedbuilds>
            <build>makefile</build>
        </supportedbuilds>
    </recipe>
</entry>
